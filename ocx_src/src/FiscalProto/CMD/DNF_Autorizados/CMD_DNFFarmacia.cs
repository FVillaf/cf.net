// [auto-generated]
// This file was autogenerated by a tool.
// Please, don't edit it directly. Else, your changes could be lost next time the tool is executed.
// If you need to touch this file, remove the [auto-generated] key at top. Then, the tool will skip the regeneration of this file.
//
// Copyright (c) 2022 - Federico Villafañes (federvillaf@hotmail.com)
// http://www.moretti.com.ar y Federico Villafañes - All Rights Reserved

// CMD_DNFFarmacia.cs - Automatic processing of commands.

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace FiscalProto
{
	public interface IMI_DNFFarmacia_ClassInterface
	{
		string LObraSocial { get; set; }
		string LCoseguro1 { get; set; }
		string LCoseguro2 { get; set; }
		string LCoseguro3 { get; set; }
		int LFechaVenc { get; set; }
		string LAfilNom { get; set; }
		string LAfilNro { get; set; }
		string LAfilDom1 { get; set; }
		string LAfilDom2 { get; set; }
		string LNroEstab { get; set; }
		string LCompInterno { get; set; }
		string LExtra1 { get; set; }
		string LExtra2 { get; set; }
		string LLibre1 { get; set; }
		string LLibre2 { get; set; }
		string LLibre3 { get; set; }
		string LLibre4 { get; set; }
		string LLibre5 { get; set; }
		string LLibre6 { get; set; }
		int ReempColaNum1 { get; set; }
		string ReempColaTexto1 { get; set; }
		int ReempColaNum2 { get; set; }
		string ReempColaTexto2 { get; set; }
		int ReempColaNum3 { get; set; }
		string ReempColaTexto3 { get; set; }
		bool Cut { get; set; }
		bool TipoOS { get; set; }
		bool PrintPagos { get; set; }
		bool PrintDomi { get; set; }
		bool PrintDoc { get; set; }
		bool PrintFirma { get; set; }
		bool PrintAclara { get; set; }
		bool PrintTelef { get; set; }
		bool PrintCantid { get; set; }
		bool PrintHeader { get; set; }
		bool PrintEstab { get; set; }
		byte[] GetCommand();
	}

    [ClassInterface(ClassInterfaceType.None)]
	public class MI_DNFFarmacia 
		: MInput
		, IMI_DNFFarmacia_ClassInterface
	{
		public string LObraSocial { get; set; }
		public string LCoseguro1 { get; set; }
		public string LCoseguro2 { get; set; }
		public string LCoseguro3 { get; set; }
		public int LFechaVenc { get; set; }
		public string LAfilNom { get; set; }
		public string LAfilNro { get; set; }
		public string LAfilDom1 { get; set; }
		public string LAfilDom2 { get; set; }
		public string LNroEstab { get; set; }
		public string LCompInterno { get; set; }
		public string LExtra1 { get; set; }
		public string LExtra2 { get; set; }
		public string LLibre1 { get; set; }
		public string LLibre2 { get; set; }
		public string LLibre3 { get; set; }
		public string LLibre4 { get; set; }
		public string LLibre5 { get; set; }
		public string LLibre6 { get; set; }
		public int ReempColaNum1 { get; set; }
		public string ReempColaTexto1 { get; set; }
		public int ReempColaNum2 { get; set; }
		public string ReempColaTexto2 { get; set; }
		public int ReempColaNum3 { get; set; }
		public string ReempColaTexto3 { get; set; }
		public bool Cut { get; set; }
		public bool TipoOS { get; set; }
		public bool PrintPagos { get; set; }
		public bool PrintDomi { get; set; }
		public bool PrintDoc { get; set; }
		public bool PrintFirma { get; set; }
		public bool PrintAclara { get; set; }
		public bool PrintTelef { get; set; }
		public bool PrintCantid { get; set; }
		public bool PrintHeader { get; set; }
		public bool PrintEstab { get; set; }
		public override byte[] GetCommand()
		{
			Error = string.Empty;
			var list = new List<byte>();
			try
			{
				int extension = 0;
				if(Cut) extension |= 0x01;
				if(TipoOS) extension |= 0x02;
				if(PrintPagos) extension |= 0x04;
				if(PrintDomi) extension |= 0x08;
				if(PrintDoc) extension |= 0x10;
				if(PrintFirma) extension |= 0x20;
				if(PrintAclara) extension |= 0x40;
				if(PrintTelef) extension |= 0x80;
				if(PrintCantid) extension |= 0x100;
				if(PrintHeader) extension |= 0x400;
				if(PrintEstab) extension |= 0x800;
				SetOpcode(0x0F02, extension, list);
				Append_RT(list, LObraSocial, -1, 0, true);
				Append_RT(list, LCoseguro1, -1, 0, true);
				Append_RT(list, LCoseguro2, -1, 0, true);
				Append_RT(list, LCoseguro3, -1, 0, true);
				Append_D(list, LFechaVenc, 6, 0, true);
				Append_RT(list, LAfilNom, -1, 0, true);
				Append_RT(list, LAfilNro, -1, 0, true);
				Append_RT(list, LAfilDom1, -1, 0, true);
				Append_RT(list, LAfilDom2, -1, 0, true);
				Append_RT(list, LNroEstab, -1, 0, true);
				Append_RT(list, LCompInterno, -1, 0, true);
				Append_RT(list, LExtra1, -1, 0, true);
				Append_RT(list, LExtra2, -1, 0, true);
				Append_RT(list, LLibre1, -1, 0, true);
				Append_RT(list, LLibre2, -1, 0, true);
				Append_RT(list, LLibre3, -1, 0, true);
				Append_RT(list, LLibre4, -1, 0, true);
				Append_RT(list, LLibre5, -1, 0, true);
				Append_RT(list, LLibre6, -1, 0, true);
				Append_N(list, ReempColaNum1, 3, 0, true);
				Append_RT(list, ReempColaTexto1, -1, 0, true);
				Append_N(list, ReempColaNum2, 3, 0, true);
				Append_RT(list, ReempColaTexto2, -1, 0, true);
				Append_N(list, ReempColaNum3, 3, 0, true);
				Append_RT(list, ReempColaTexto3, -1, 0, true);
			}
			catch(Exception ex) { Error = ex.Message; list.Clear(); }
			return list.ToArray();
		}
	}


	public interface IMO_DNFFarmacia_ClassInterface
	{
		int Numero { get; set; }

        string PrinterStatus { get; }
		string FiscalStatus { get; }
		int ErrorCodeInt { get; }

		void SetFromCommand(byte[] bindata);
	}

    [ClassInterface(ClassInterfaceType.None)]
	public class MO_DNFFarmacia  
		: MOutput
		, IMO_DNFFarmacia_ClassInterface
	{
		public int Numero { get; set; }

		public override void SetFromCommand(byte[] bindata)
		{
			Error = string.Empty;
		    var data = new BinReader(bindata);
			try
			{
				ParseAnswerHeader(data);
                if(this.ErrorCodeInt == 0)
				{
					Numero = Extract_N(data, 5, false);
				}
			}
			catch(Exception ex) { Error = ex.Message; }
		}
	}


	public interface ICMD_DNFFarmacia_ClassInterface
	{
		CmdStatus Status {  get ; }
		string Nombre { get; }
		int Opcode { get; }
		string Description { get; }

		IMI_DNFFarmacia_ClassInterface Input { get; }
		IMO_DNFFarmacia_ClassInterface Output { get; }
	}

    [ClassInterface(ClassInterfaceType.None)]
	public class CMD_DNFFarmacia 
	    : CMD_Generic
		, ICMD_DNFFarmacia_ClassInterface
	{
		public override CmdStatus Status {  get { return CmdStatus.Listo; }}
		public override string Nombre { get { return "DNFFarmacia"; }}
		public override int Opcode { get { return 0x0F02; }}
		public override string Description { get { return "Realiza la impresión de un documento de farmacia."; }}

		public IMI_DNFFarmacia_ClassInterface Input { get; protected set; }
		public IMO_DNFFarmacia_ClassInterface Output { get; protected set; }

		public void SetDefaults()
		{
			Input = new MI_DNFFarmacia();
			Output = new MO_DNFFarmacia();
		}

		// Ctor
		public CMD_DNFFarmacia()
		{
			SetDefaults();
		}
	}

}
