// [auto-generated]
// This file was autogenerated by a tool.
// Please, don't edit it directly. Else, your changes could be lost next time the tool is executed.
// If you need to touch this file, remove the [auto-generated] key at top. Then, the tool will skip the regeneration of this file.
//
// Copyright (c) 2022 - Federico Villafañes (federvillaf@hotmail.com)
// http://www.moretti.com.ar y Federico Villafañes - All Rights Reserved

// CMD_JORAudRangoZetas.cs - Automatic processing of commands.

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace FiscalProto
{
	public interface IMI_JORAudRangoZetas_ClassInterface
	{
		int ZetaDesde { get; set; }
		int ZetaHasta { get; set; }
		bool Print { get; set; }
		bool Detalle { get; set; }
		bool Zipeado { get; set; }
		bool PKCS7 { get; set; }
		bool Pendrive { get; set; }
		byte[] GetCommand();
	}

    [ClassInterface(ClassInterfaceType.None)]
	public class MI_JORAudRangoZetas 
		: MInput
		, IMI_JORAudRangoZetas_ClassInterface
	{
		public int ZetaDesde { get; set; }
		public int ZetaHasta { get; set; }
		public bool Print { get; set; }
		public bool Detalle { get; set; }
		public bool Zipeado { get; set; }
		public bool PKCS7 { get; set; }
		public bool Pendrive { get; set; }
		public override byte[] GetCommand()
		{
			Error = string.Empty;
			var list = new List<byte>();
			try
			{
				int extension = 0;
				if(Print) extension |= 0x01;
				if(Detalle) extension |= 0x02;
				if(Zipeado) extension |= 0x04;
				if(PKCS7) extension |= 0x10;
				if(Pendrive) extension |= 0x100;
				SetOpcode(0x0813, extension, list);
				Append_N(list, ZetaDesde, 6, 0, false);
				Append_N(list, ZetaHasta, 6, 0, false);
			}
			catch(Exception ex) { Error = ex.Message; list.Clear(); }
			return list.ToArray();
		}
	}


	public interface IMO_JORAudRangoZetas_ClassInterface
	{
		bool CertifValid { get; set; }
		int Largo { get; set; }
		string NomArchivo { get; set; }

        string PrinterStatus { get; }
		string FiscalStatus { get; }
		int ErrorCodeInt { get; }

		void SetFromCommand(byte[] bindata);
	}

    [ClassInterface(ClassInterfaceType.None)]
	public class MO_JORAudRangoZetas  
		: MOutput
		, IMO_JORAudRangoZetas_ClassInterface
	{
		public bool CertifValid { get; set; }
		public int Largo { get; set; }
		public string NomArchivo { get; set; }

		public override void SetFromCommand(byte[] bindata)
		{
			Error = string.Empty;
		    var data = new BinReader(bindata);
			try
			{
				ParseAnswerHeader(data);
                if(this.ErrorCodeInt == 0)
				{
					CertifValid = Extract_Y(data, 1, false);
					Largo = Extract_N(data, 10, false);
					NomArchivo = Extract_P(data, -1, false);
				}
			}
			catch(Exception ex) { Error = ex.Message; }
		}
	}


	public interface ICMD_JORAudRangoZetas_ClassInterface
	{
		CmdStatus Status {  get ; }
		string Nombre { get; }
		int Opcode { get; }
		string Description { get; }

		IMI_JORAudRangoZetas_ClassInterface Input { get; }
		IMO_JORAudRangoZetas_ClassInterface Output { get; }
	}

    [ClassInterface(ClassInterfaceType.None)]
	public class CMD_JORAudRangoZetas 
	    : CMD_Generic
		, ICMD_JORAudRangoZetas_ClassInterface
	{
		public override CmdStatus Status {  get { return CmdStatus.Listo; }}
		public override string Nombre { get { return "JORAudRangoZetas"; }}
		public override int Opcode { get { return 0x0813; }}
		public override string Description { get { return "Inicia un informe de auditoría detallada de jornadas fiscales. Obtiene la información de acuerdo con los parámetros solicitados y prepara la posterior descarga electrónica de los mismos."; }}

		public IMI_JORAudRangoZetas_ClassInterface Input { get; protected set; }
		public IMO_JORAudRangoZetas_ClassInterface Output { get; protected set; }

		public void SetDefaults()
		{
			Input = new MI_JORAudRangoZetas();
			Output = new MO_JORAudRangoZetas();
		}

		// Ctor
		public CMD_JORAudRangoZetas()
		{
			SetDefaults();
		}
	}

}
