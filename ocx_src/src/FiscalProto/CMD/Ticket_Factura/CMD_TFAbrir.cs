// [auto-generated]
// This file was autogenerated by a tool.
// Please, don't edit it directly. Else, your changes could be lost next time the tool is executed.
// If you need to touch this file, remove the [auto-generated] key at top. Then, the tool will skip the regeneration of this file.
//
// Copyright (c) 2022 - Federico Villafañes (federvillaf@hotmail.com)
// http://www.moretti.com.ar y Federico Villafañes - All Rights Reserved

// CMD_TFAbrir.cs - Automatic processing of commands.

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace FiscalProto
{
	public interface IMI_TFAbrir_ClassInterface
	{
		string NomCliente_1 { get; set; }
		string NomCliente_2 { get; set; }
		string DirecCliente_1 { get; set; }
		string DirecCliente_2 { get; set; }
		string DirecCliente_3 { get; set; }
		TipoDocEnum TipoDoc { get; set; }
		string NroDoc { get; set; }
		TipoRespEnum RespIva { get; set; }
		string LineaDoc_1 { get; set; }
		string LineaDoc_2 { get; set; }
		string LineaDoc_3 { get; set; }
		string LineaCheque { get; set; }
		bool ImpreDuplicado { get; set; }
		bool StoreDesc { get; set; }
		bool StoreAttr { get; set; }
		bool StoreExtra { get; set; }
		bool PrintReintegro { get; set; }
		bool Tipo { get; set; }
		byte[] GetCommand();
	}

    [ClassInterface(ClassInterfaceType.None)]
	public class MI_TFAbrir 
		: MInput
		, IMI_TFAbrir_ClassInterface
	{
		public string NomCliente_1 { get; set; }
		public string NomCliente_2 { get; set; }
		public string DirecCliente_1 { get; set; }
		public string DirecCliente_2 { get; set; }
		public string DirecCliente_3 { get; set; }
		public TipoDocEnum TipoDoc { get; set; }
		public string NroDoc { get; set; }
		public TipoRespEnum RespIva { get; set; }
		public string LineaDoc_1 { get; set; }
		public string LineaDoc_2 { get; set; }
		public string LineaDoc_3 { get; set; }
		public string LineaCheque { get; set; }
		public bool ImpreDuplicado { get; set; }
		public bool StoreDesc { get; set; }
		public bool StoreAttr { get; set; }
		public bool StoreExtra { get; set; }
		public bool PrintReintegro { get; set; }
		public bool Tipo { get; set; }
		public override byte[] GetCommand()
		{
			Error = string.Empty;
			var list = new List<byte>();
			try
			{
				int extension = 0;
				if(ImpreDuplicado) extension |= 0x02;
				if(StoreDesc) extension |= 0x80;
				if(StoreAttr) extension |= 0x100;
				if(StoreExtra) extension |= 0x200;
				if(PrintReintegro) extension |= 0x1000;
				if(Tipo) extension |= 0x2000;
				SetOpcode(0x0B01, extension, list);
				Append_RT(list, NomCliente_1, -1, 0, true);
				Append_RT(list, NomCliente_2, -1, 0, true);
				Append_RT(list, DirecCliente_1, -1, 0, true);
				Append_RT(list, DirecCliente_2, -1, 0, true);
				Append_RT(list, DirecCliente_3, -1, 0, true);
				Append_L(list, ((char)TipoDoc).ToString(), 1, 0, false);
				Append_A(list, NroDoc, 20, 0, false);
				Append_L(list, ((char)RespIva).ToString(), 1, 0, false);
				Append_RT(list, LineaDoc_1, -1, 0, true);
				Append_RT(list, LineaDoc_2, -1, 0, true);
				Append_RT(list, LineaDoc_3, -1, 0, true);
				Append_RT(list, LineaCheque, -1, 0, true);
			}
			catch(Exception ex) { Error = ex.Message; list.Clear(); }
			return list.ToArray();
		}
	}


	public interface IMO_TFAbrir_ClassInterface
	{

        string PrinterStatus { get; }
		string FiscalStatus { get; }
		int ErrorCodeInt { get; }

		void SetFromCommand(byte[] bindata);
	}

    [ClassInterface(ClassInterfaceType.None)]
	public class MO_TFAbrir  
		: MOutput
		, IMO_TFAbrir_ClassInterface
	{

		public override void SetFromCommand(byte[] bindata)
		{
			Error = string.Empty;
		    var data = new BinReader(bindata);
			try
			{
				ParseAnswerHeader(data);
                if(this.ErrorCodeInt == 0)
				{
				}
			}
			catch(Exception ex) { Error = ex.Message; }
		}
	}


	public interface ICMD_TFAbrir_ClassInterface
	{
		CmdStatus Status {  get ; }
		string Nombre { get; }
		int Opcode { get; }
		string Description { get; }

		IMI_TFAbrir_ClassInterface Input { get; }
		IMO_TFAbrir_ClassInterface Output { get; }
	}

    [ClassInterface(ClassInterfaceType.None)]
	public class CMD_TFAbrir 
	    : CMD_Generic
		, ICMD_TFAbrir_ClassInterface
	{
		public override CmdStatus Status {  get { return CmdStatus.EnCurso; }}
		public override string Nombre { get { return "TFAbrir"; }}
		public override int Opcode { get { return 0x0B01; }}
		public override string Description { get { return "Abre un ticket factura o una nota de debito."; }}

		public IMI_TFAbrir_ClassInterface Input { get; protected set; }
		public IMO_TFAbrir_ClassInterface Output { get; protected set; }

		public void SetDefaults()
		{
			Input = new MI_TFAbrir();
			Output = new MO_TFAbrir();
		}

		// Ctor
		public CMD_TFAbrir()
		{
			SetDefaults();
		}
	}

}
