// [auto-generated]
// This file was autogenerated by a tool.
// Please, don't edit it directly. Else, your changes could be lost next time the tool is executed.
// If you need to touch this file, remove the [auto-generated] key at top. Then, the tool will skip the regeneration of this file.
//
// Copyright (c) 2017 - Andres Moretti e Hijos S.A - Argentina
// http://www.moretti.com.ar - All Rights Reserved

// CMD_JORAudRangoFecha.cs - Automatic processing of commands.

using System;
using System.ComponentModel;
using System.Collections.Generic;

namespace FiscalProto.Jornada_Fiscal
{
	public class MI_JORAudRangoFecha : MInput
	{

		[Description("Fecha inicial del informe."), Category("Datos")]
		public int FecDesde { get; set; }

		[Description("Fecha final del informe."), Category("Datos")]
		public int FecHasta { get; set; }

		[Category("Extension")]
		[Description(
			"Imprime el reporte\n" +
			"false: No, true: Si")]
		public bool Print { get; set; }

		[Category("Extension")]
		[Description(
			"Indica si la auditoría será resumida o detallada\n" +
			"false: Resumida, true: Detallada")]
		public bool Detalle { get; set; }

		[Category("Extension")]
		[Description(
			"Zipea el archivo durante la descarga, para agilizarla\n" +
			"false: No, true: Si")]
		public bool Zipeado { get; set; }

		[Category("Extension")]
		[Description(
			"Indica si codifica y firma el archivo como PKCS7\n" +
			"false: Si, true: No")]
		public bool PKCS7 { get; set; }

		[Category("Extension")]
		[Description(
			"Descarga la auditoria en un pendrive\n" +
			"false: No, true: Si")]
		public bool Pendrive { get; set; }

		public override byte[] GetCommand()
		{
			Error = string.Empty;
			var list = new List<byte>();
			try
			{
				int extension = 0;
				if(Print) extension |= 0x01;
				if(Detalle) extension |= 0x02;
				if(Zipeado) extension |= 0x04;
				if(PKCS7) extension |= 0x10;
				if(Pendrive) extension |= 0x100;
				SetOpcode(0x0812, extension, list);
				Append_N(list, FecDesde, 6, 0, false);
				Append_N(list, FecHasta, 6, 0, false);
			}
			catch(Exception ex) { Error = ex.Message; list.Clear(); }
			return list.ToArray();
		}
	}

	public class MO_JORAudRangoFecha  : MOutput
	{

		[Description("Los certificados son válidos y la descarga de archivos está habilitada."), Category("Datos"), ReadOnly(true)]
		public bool CertifValid { get; set; }

		[Description("Largo del archivo a descargar, en bytes."), Category("Datos"), ReadOnly(true)]
		public int Largo { get; set; }

		[Description("Nombre del archivo que se descargará."), Category("Datos"), ReadOnly(true)]
		public string NomArchivo { get; set; }

		public override void SetFromCommand(byte[] bindata)
		{
			Error = string.Empty;
		    var data = new BinReader(bindata);
			try
			{
				ParseAnswerHeader(data);
                if(this.ErrorCodeInt == 0)
				{
					CertifValid = Extract_Y(data, 1, false);
					Largo = Extract_N(data, 10, false);
					NomArchivo = Extract_P(data, -1, false);
				}
			}
			catch(Exception ex) { Error = ex.Message; }
		}
	}

	public class CMD_JORAudRangoFecha 
	    : CMD_CommandBase<MI_JORAudRangoFecha, MO_JORAudRangoFecha>
	{
		public override CmdStatus Status {  get { return CmdStatus.Listo; }}
		public override string Nombre { get { return "JORAudRangoFecha"; }}
		public override int Opcode { get { return 0x0812; }}
		public override string Description { get { return "Inicia un informe de auditoría detallada de jornadas fiscales. Obtiene la información de acuerdo con los parámetros solicitados y prepara la posterior descarga electrónica de los mismos."; }}

		// Ctor
		public CMD_JORAudRangoFecha()
		{
			Input = new MI_JORAudRangoFecha();
			Output = new MO_JORAudRangoFecha();
		}
	}
}
