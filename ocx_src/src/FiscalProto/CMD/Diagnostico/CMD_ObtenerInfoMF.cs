// [auto-generated]
// This file was autogenerated by a tool.
// Please, don't edit it directly. Else, your changes could be lost next time the tool is executed.
// If you need to touch this file, remove the [auto-generated] key at top. Then, the tool will skip the regeneration of this file.
//
// Copyright (c) 2022 - Federico Villafa침es (federvillaf@hotmail.com)
// http://www.moretti.com.ar y Federico Villafa침es - All Rights Reserved

// CMD_ObtenerInfoMF.cs - Automatic processing of commands.

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace FiscalProto
{
	public interface IMI_ObtenerInfoMF_ClassInterface
	{
		bool Print { get; set; }
		byte[] GetCommand();
	}

    [ClassInterface(ClassInterfaceType.None)]
	public class MI_ObtenerInfoMF 
		: MInput
		, IMI_ObtenerInfoMF_ClassInterface
	{
		public bool Print { get; set; }
		public override byte[] GetCommand()
		{
			Error = string.Empty;
			var list = new List<byte>();
			try
			{
				int extension = 0;
				if(Print) extension |= 0x01;
				SetOpcode(0x020B, extension, list);
			}
			catch(Exception ex) { Error = ex.Message; list.Clear(); }
			return list.ToArray();
		}
	}


	public interface IMO_ObtenerInfoMF_ClassInterface
	{
		int ZetasEmitidas { get; set; }
		int ZetasEmitidasTodas { get; set; }
		int ZetasReservadas { get; set; }
		int Descargas { get; set; }
		int Descargas_Todas { get; set; }
		int DescargasReservadas { get; set; }
		int CantidadAltas { get; set; }
		int CantidadBajas { get; set; }
		int AltasReservadas { get; set; }

        string PrinterStatus { get; }
		string FiscalStatus { get; }
		int ErrorCodeInt { get; }

		void SetFromCommand(byte[] bindata);
	}

    [ClassInterface(ClassInterfaceType.None)]
	public class MO_ObtenerInfoMF  
		: MOutput
		, IMO_ObtenerInfoMF_ClassInterface
	{
		public int ZetasEmitidas { get; set; }
		public int ZetasEmitidasTodas { get; set; }
		public int ZetasReservadas { get; set; }
		public int Descargas { get; set; }
		public int Descargas_Todas { get; set; }
		public int DescargasReservadas { get; set; }
		public int CantidadAltas { get; set; }
		public int CantidadBajas { get; set; }
		public int AltasReservadas { get; set; }

		public override void SetFromCommand(byte[] bindata)
		{
			Error = string.Empty;
		    var data = new BinReader(bindata);
			try
			{
				ParseAnswerHeader(data);
                if(this.ErrorCodeInt == 0)
				{
					ZetasEmitidas = Extract_N(data, 8, false);
					ZetasEmitidasTodas = Extract_N(data, 8, false);
					ZetasReservadas = Extract_N(data, 8, false);
					Descargas = Extract_N(data, 8, false);
					Descargas_Todas = Extract_N(data, 8, false);
					DescargasReservadas = Extract_N(data, 8, false);
					CantidadAltas = Extract_N(data, 8, false);
					CantidadBajas = Extract_N(data, 8, false);
					AltasReservadas = Extract_N(data, 8, false);
				}
			}
			catch(Exception ex) { Error = ex.Message; }
		}
	}


	public interface ICMD_ObtenerInfoMF_ClassInterface
	{
		CmdStatus Status {  get ; }
		string Nombre { get; }
		int Opcode { get; }
		string Description { get; }

		IMI_ObtenerInfoMF_ClassInterface Input { get; }
		IMO_ObtenerInfoMF_ClassInterface Output { get; }
	}

    [ClassInterface(ClassInterfaceType.None)]
	public class CMD_ObtenerInfoMF 
	    : CMD_Generic
		, ICMD_ObtenerInfoMF_ClassInterface
	{
		public override CmdStatus Status {  get { return CmdStatus.Listo; }}
		public override string Nombre { get { return "ObtenerInfoMF"; }}
		public override int Opcode { get { return 0x020B; }}
		public override string Description { get { return "Obtiene informaci칩n hist칩rica respecto al uso de la memoria fiscal del equipo."; }}

		public IMI_ObtenerInfoMF_ClassInterface Input { get; protected set; }
		public IMO_ObtenerInfoMF_ClassInterface Output { get; protected set; }

		public void SetDefaults()
		{
			Input = new MI_ObtenerInfoMF();
			Output = new MO_ObtenerInfoMF();
		}

		// Ctor
		public CMD_ObtenerInfoMF()
		{
			SetDefaults();
		}
	}

}
