// [auto-generated]
// This file was autogenerated by a tool.
// Please, don't edit it directly. Else, your changes could be lost next time the tool is executed.
// If you need to touch this file, remove the [auto-generated] key at top. Then, the tool will skip the regeneration of this file.
//
// Copyright (c) 2017 - Andres Moretti e Hijos S.A - Argentina
// http://www.moretti.com.ar - All Rights Reserved

// CMD_LogoIniciarCarga.cs - Automatic processing of commands.

using System;
using System.ComponentModel;
using System.Collections.Generic;

namespace FiscalProto.Configuracion
{
	public class MI_LogoIniciarCarga : MInput
	{

		[Description("Ancho del logo, en pixeles."), Category("Datos")]
		public int Ancho { get; set; }

		[Description("Alto del logo, en pixeles."), Category("Datos")]
		public int Alto { get; set; }

		[Description("Numero de logo (0-9) a cargar, de los 10 disponibles."), Category("Datos")]
		public int Indice { get; set; }

		[Category("Extension")]
		[Description(
			"Formato de los datos del logo. En la v1.0, solo 'Moretti' se soporta.\n" +
			"false: Epson, true: Moretti")]
		public bool Formato { get; set; }

		public override byte[] GetCommand()
		{
			Error = string.Empty;
			var list = new List<byte>();
			try
			{
				int extension = 0;
				if(Formato) extension |= 0x01;
				SetOpcode(0x0530, extension, list);
				Append_N(list, Ancho, 3, 0, false);
				Append_N(list, Alto, 3, 0, false);
				Append_N(list, Indice, 1, 0, false);
			}
			catch(Exception ex) { Error = ex.Message; list.Clear(); }
			return list.ToArray();
		}
	}

	public class MO_LogoIniciarCarga  : MOutput
	{

		public override void SetFromCommand(byte[] bindata)
		{
			Error = string.Empty;
		    var data = new BinReader(bindata);
			try
			{
				ParseAnswerHeader(data);
                if(this.ErrorCodeInt == 0)
				{
				}
			}
			catch(Exception ex) { Error = ex.Message; }
		}
	}

	public class CMD_LogoIniciarCarga 
	    : CMD_CommandBase<MI_LogoIniciarCarga, MO_LogoIniciarCarga>
	{
		public override CmdStatus Status {  get { return CmdStatus.Listo; }}
		public override string Nombre { get { return "LogoIniciarCarga"; }}
		public override int Opcode { get { return 0x0530; }}
		public override string Description { get { return "Inicia la carga de uno de los logos de usuario disponibles."; }}

		// Ctor
		public CMD_LogoIniciarCarga()
		{
			Input = new MI_LogoIniciarCarga();
			Output = new MO_LogoIniciarCarga();
		}
	}
}
