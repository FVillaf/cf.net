// [auto-generated]
// This file was autogenerated by a tool.
// Please, don't edit it directly. Else, your changes could be lost next time the tool is executed.
// If you need to touch this file, remove the [auto-generated] key at top. Then, the tool will skip the regeneration of this file.

// FWInterface.cs
// Interface for linking to emulator

using System;
using System.ComponentModel;
using System.Collections.Generic;

using FiscalProto.Sistema;
using FiscalProto.Diagnostico;
using FiscalProto.Inicializacion;
using FiscalProto.Configuracion;
using FiscalProto.Impresora;
using FiscalProto.Jornada_Fiscal;
using FiscalProto.Descarga;
using FiscalProto.Ticket;
using FiscalProto.Ticket_Factura;
using FiscalProto.Nota_de_Credito;
using FiscalProto.DNFH_Genericos;
using FiscalProto.DNF_Autorizados;
using FiscalProto.DNFH_Homologados;
using FiscalProto.Bases_de_Datos;

namespace FiscalProto
{
	public partial class FWInterface
	{
		public List<CMD_Generic> Commands { get; private set; }

		public List<KeyValuePair<int, string>> Groups { get; private set; }

		public FWInterface()
		{
            Commands = new List<CMD_Generic>
            {
                new CMD_ObtenerEstado(),
                new CMD_ObtenerErrorInicio(),
                new CMD_ObtenerErrorInterno(),
                new CMD_ObtenerID(),
                new CMD_ConfigurarVelocidad(),
                new CMD_DiagEquipo(),
                new CMD_RippleTest(),
                new CMD_ObtenerInfoEquipo(),
                new CMD_ObtenerInfoMF(),
                new CMD_TicketTecnico(),
                new CMD_ObtenerInfoCertif(),
                new CMD_ObtenerSerializacion(),
                new CMD_ObtenerCSR(),
                new CMD_IniciaSerializacion(),
                new CMD_SerializaCertificados(),
                new CMD_FinalizaSerializacion(),
                new CMD_BajaFiscal(),
                new CMD_IniciaAltaFiscal(),
                new CMD_ConfirmaAltaFiscal(),
                new CMD_ConfigFechaHora(),
                new CMD_ObtenerFechaHora(),
                new CMD_ConfigRespIVA(),
                new CMD_CambiarConfigAFIP(),
                new CMD_ObtenerConfigAFIP(),
                new CMD_ObtenerDatosFiscalizacion(),
                new CMD_ConfigEncabezado(),
                new CMD_ObtenerEncabezado(),
                new CMD_ConfigCola(),
                new CMD_ObtenerCola(),
                new CMD_ConfigInfoEstab(),
                new CMD_ObtenerInfoEstab(),
                new CMD_ObtenerConfigClaves(),
                new CMD_LogoIniciarCarga(),
                new CMD_LogoContenido(),
                new CMD_LogoFinalizarCarga(),
                new CMD_LogoCancelarCarga(),
                new CMD_LogoEliminar(),
                new CMD_ActivaImpresionArqueo(),
                new CMD_ObtenerImpresionArqueo(),
                new CMD_ResetFabrica(),
                new CMD_ConfigRedEstablece(),
                new CMD_ConfigRedLee(),
                new CMD_DisplayConfig(),
                new CMD_AvanzarPapel(),
                new CMD_CortarPapel(),
                new CMD_AbrirGaveta(),
                new CMD_ConfigCuchilla(),
                new CMD_ObtenerConfigCuchilla(),
                new CMD_ConfigurarFuente(),
                new CMD_ObtenerFuente(),
                new CMD_ConfigurarDensidadImpresion(),
                new CMD_ObtenerDensidadImpresion(),
                new CMD_TKAbrir(),
                new CMD_TKItem(),
                new CMD_TKSubtotal(),
                new CMD_TKDescuento(),
                new CMD_TKPago(),
                new CMD_TKCerrar(),
                new CMD_TKAnula(),
                new CMD_TKSetConfig(),
                new CMD_TKGetConfig(),
                new CMD_TKGetInfo(),
                new CMD_TKGetIVA(),
                new CMD_TKGetPago(),
                new CMD_TKGetVentas(),
                new CMD_TKGetImpInt(),
                new CMD_TKGetOtrosTrib(),
                new CMD_TKGetUltimoCierre(),
                new CMD_TKOtroTributo(),
                new CMD_TKUnitario(),
                new CMD_TFAbrir(),
                new CMD_TFItem(),
                new CMD_TFSubtotal(),
                new CMD_TFDescuento(),
                new CMD_TFPago(),
                new CMD_TFCerrar(),
                new CMD_TFAnula(),
                new CMD_TFSetConfig(),
                new CMD_TFGetConfig(),
                new CMD_TFGetInfo(),
                new CMD_TFGetIVA(),
                new CMD_TFGetPago(),
                new CMD_TFGetVentas(),
                new CMD_TFGetImpInt(),
                new CMD_TFGetOtrosTrib(),
                new CMD_TFGetUltimoCierre(),
                new CMD_TFOtroTributo(),
                new CMD_NCAbrir(),
                new CMD_NCItem(),
                new CMD_NCSubtotal(),
                new CMD_NCDescuento(),
                new CMD_NCPago(),
                new CMD_NCCerrar(),
                new CMD_NCAnula(),
                new CMD_NCSetConfig(),
                new CMD_NCGetConfig(),
                new CMD_NCGetInfo(),
                new CMD_NCGetIVA(),
                new CMD_NCGetPago(),
                new CMD_NCGetVentas(),
                new CMD_NCGetImpInt(),
                new CMD_NCGetOtrosTrib(),
                new CMD_NCGetUltimoCierre(),
                new CMD_NCOtroTributo(),
                new CMD_JORZeta(),
                new CMD_JORTotalVentas(),
                new CMD_JORGetInfoVentasJornada(),
                new CMD_JORGetInfoImpuestosJornada(),
                new CMD_JORGetInfoOtrosTributosJornada(),
                new CMD_JORAudRangoFecha(),
                new CMD_JORAudRangoZetas(),
                new CMD_JORAudEnumera(),
                new CMD_JORAudFinal(),
                new CMD_JORAudCancela(),
                new CMD_JORGetInfoContadoresJornada(),
                new CMD_JORDupliInicia(),
                new CMD_JORDupliEnumera(),
                new CMD_JORDupliFinal(),
                new CMD_JORDupliCancela(),
                new CMD_DNL_RangoFechas(),
                new CMD_DNL_RangoZetas(),
                new CMD_DNL_IvaVentas(),
                new CMD_DNL_MemoriaFiscal(),
                new CMD_DNL_Enumera(),
                new CMD_DNL_Final(),
                new CMD_DNL_Cancela(),
                new CMD_DNL_Borra(),
                new CMD_DNL_Info(),
                new CMD_DNFH1Abrir(),
                new CMD_DNFH1Texto(),
                new CMD_DNFH1Lineas(),
                new CMD_DNFH1Cerrar(),
                new CMD_DNFH1CambiaPreferencias(),
                new CMD_DNFH1ObtienePreferencias(),
                new CMD_DNFH1Info(),
                new CMD_DNFH1Completo(),
                new CMD_MensajeSistema(),
                new CMD_DNFHAbrir(),
                new CMD_DNFHItem(),
                new CMD_DNFHSubtotal(),
                new CMD_DNFHDescuento(),
                new CMD_DNFHPago(),
                new CMD_DFNHCerrar(),
                new CMD_DNFHAnula(),
                new CMD_DNFHSetConfig(),
                new CMD_DNFHGetConfig(),
                new CMD_DNFHGetOtrosTrib(),
                new CMD_DNFHOtroTributo(),
                new CMD_DNFTarjeta(),
                new CMD_DNFFarmacia(),
                new CMD_DNFEstacion(),
                new CMD_DNFReparto(),
                new CMD_DNFCobroServ(),
                new CMD_DNFRetiDota(),
                new CMD_DNFCambio(),
                new CMD_DNFCtaCte(),
                new CMD_DBInfo(),
                new CMD_DBNewRecord(),
                new CMD_DBDelete(),
                new CMD_DBGet(),
                new CMD_DBUpdate(),
                new CMD_DBEnumStart(),
                new CMD_DBEnumNext(),
                new CMD_DBEnumEnd(),
                new CMD_DBTabla(),
                new CMD_TeleKeyb()
            };

            Groups = new List<KeyValuePair<int, string>>
            {
                new KeyValuePair<int, string>(0x00, "Sistema"),
                new KeyValuePair<int, string>(0x02, "Diagnostico"),
                new KeyValuePair<int, string>(0x04, "Inicializacion"),
                new KeyValuePair<int, string>(0x05, "Configuracion"),
                new KeyValuePair<int, string>(0x07, "Impresora"),
                new KeyValuePair<int, string>(0x08, "Jornada Fiscal"),
                new KeyValuePair<int, string>(0x09, "Descarga"),
                new KeyValuePair<int, string>(0x0A, "Ticket"),
                new KeyValuePair<int, string>(0x0B, "Ticket Factura"),
                new KeyValuePair<int, string>(0x0D, "Nota de Credito"),
                new KeyValuePair<int, string>(0x0E, "DNFH Genericos"),
                new KeyValuePair<int, string>(0x0F, "DNF Autorizados"),
                new KeyValuePair<int, string>(0x10, "DNFH Homologados"),
                new KeyValuePair<int, string>(0x91, "Bases de Datos")
            };
        }
	}

	public enum CodUnidadMedida
	{

		[Description("Sin Descripci√≥n")]
		nada = 0,
		Kilogramo = 1,
		Metros = 2,

		[Description("Metro cuadrado")]
		M2 = 3,

		[Description("Metro cubico")]
		M3 = 4,
		Litros = 5,
		Unidad = 7,
		Par = 8,
		Docena = 9,
		Quilate = 10,
		Millar = 11,

		[Description("Mega u. inter. act. antib.")]
		Mega = 12,

		[Description("Unidad int. act. inmung.")]
		UInterna = 13,
		Gramo = 14,
		Milimetro = 15,

		[Description("Milimetro cubico")]
		MM3 = 16,
		Kilometro = 17,
		Hectolitro = 18,
		Centimetro = 20,

		[Description("Kilogramo activo")]
		KGAct = 21,

		[Description("Gramo activo")]
		GRAct = 22,

		[Description("Gramo base")]
		GRBase = 23,
		Uiacthor = 24,

		[Description("Jgo. pqt. mazo naipes")]
		Juego = 25,
		Muiacthor = 26,

		[Description("Centimetro cubico")]
		CM3 = 27,
		Uiactant = 28,
		Tonelada = 29,

		[Description("Decametro cubico")]
		DCM3 = 30,

		[Description("Hectometro cubico")]
		HCM3 = 31,

		[Description("Kilometro cubico")]
		KM3 = 32,
		Microgramo = 33,
		Nanogramo = 34,
		Picogramo = 35,
		Muiactant = 36,
		Uiactig = 37,
		Miligramo = 41,
		Mililitro = 47,
		Curie = 48,
		Milicurie = 49,
		Microcurie = 50,

		[Description("U inter. act. hormonal")]
		UHormo = 51,

		[Description("Mega u. inter. act. hormonal")]
		MegaHormo = 52,

		[Description("Kilogramo base")]
		KGBase = 53,
		Gruesa = 54,
		Muiactig = 55,

		[Description("Kilogramo bruto")]
		KGBruto = 61,

		[Description("Pack 63 - Horma")]
		Horma = 62
	}

	public enum CodTKItemCondIva
	{
		Gravado = 7,
		Exento = 2,
		NoGravado = 1,
		NoCorresponde = 0
	}

	public enum CodMedioDePago
	{

		[Description("Carta de credito documentario")]
		Carta_de_credito_documentario = 1,

		[Description("Cartas de credito simple")]
		Cartas_de_credito_simple = 2,
		Cheque = 3,

		[Description("Cheques cancelatorios")]
		Cheques_cancelatorios = 4,

		[Description("Credito documentario")]
		Credito_documentario = 5,

		[Description("Cuenta corriente")]
		Cuenta_corriente = 6,
		Deposito = 7,
		Efectivo = 8,

		[Description("Endoso de cheque")]
		Endoso_de_cheque = 9,

		[Description("Factura de credito")]
		Factura_de_credito = 10,

		[Description("Garantias bancarias")]
		Garantias_bancarias = 11,
		Giros = 12,

		[Description("Letras de cambio")]
		Letras_de_cambio = 13,

		[Description("Medios de pago de comercio exterior")]
		Medios_de_pago_de_comercio_exterior = 14,

		[Description("Orden de pago documentaria")]
		Orden_de_pago_documentaria = 15,

		[Description("Orden de pago simple")]
		Orden_de_pago_simple = 16,

		[Description("Pago contra reembolso")]
		Pago_contra_reembolso = 17,

		[Description("Remesa documentaria")]
		Remesa_documentaria = 18,

		[Description("Remesa simple")]
		Remesa_simple = 19,

		[Description("Tarjeta de credito")]
		Tarjeta_de_credito = 20,

		[Description("Tarjeta de debito")]
		Tarjeta_de_debito = 21,
		Ticket = 22,

		[Description("Transferencia bancaria")]
		Transferencia_bancaria = 23,

		[Description("Transferencia no bancaria")]
		Transferencia_no_bancaria = 24,

		[Description("Otros medios de pago")]
		Otros_medios_de_pago = 99
	}

	public enum TipoDocEnum
	{
		DNI = 'D',
		CUIL = 'L',
		CUIT = 'T',
		Cedula = 'C',
		Pasaporte = 'P',

		[Description("Libreta C√≠vica")]
		LibrCivica = 'V',

		[Description("Libreta Enrolamiento")]
		LibrEnrolamiento = 'E'
	}

	public enum TipoRespEnum
	{
		Inscripto = 'I',

		[Description("No Inscripto")]
		No_Inscripto = 'N',
		Monotributo = 'M',
		Exento = 'E',

		[Description("No Categorizado")]
		No_Categorizado = 'U',

		[Description("ConsumidorFinal")]
		Consumidor_Final = 'F',

		[Description("Monotributo Social")]
		Monotributo_Social = 'T',

		[Description("Monotributo Promovido")]
		Monotributo_Promovido = 'P'
	}
}
