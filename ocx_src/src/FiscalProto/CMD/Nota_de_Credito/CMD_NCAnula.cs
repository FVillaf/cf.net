// [auto-generated]
// This file was autogenerated by a tool.
// Please, don't edit it directly. Else, your changes could be lost next time the tool is executed.
// If you need to touch this file, remove the [auto-generated] key at top. Then, the tool will skip the regeneration of this file.
//
// Copyright (c) 2022 - Federico Villafañes (federvillaf@hotmail.com)
// http://www.moretti.com.ar y Federico Villafañes - All Rights Reserved

// CMD_NCAnula.cs - Automatic processing of commands.

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace FiscalProto
{
	public interface IMI_NCAnula_ClassInterface
	{
		byte[] GetCommand();
	}

    [ClassInterface(ClassInterfaceType.None)]
	public class MI_NCAnula 
		: MInput
		, IMI_NCAnula_ClassInterface
	{
		public override byte[] GetCommand()
		{
			Error = string.Empty;
			var list = new List<byte>();
			try
			{
				int extension = 0;
				SetOpcode(0x0D07, extension, list);
			}
			catch(Exception ex) { Error = ex.Message; list.Clear(); }
			return list.ToArray();
		}
	}


	public interface IMO_NCAnula_ClassInterface
	{
		int NumTicket { get; set; }
		string TipoTicket { get; set; }

        string PrinterStatus { get; }
		string FiscalStatus { get; }
		int ErrorCodeInt { get; }

		void SetFromCommand(byte[] bindata);
	}

    [ClassInterface(ClassInterfaceType.None)]
	public class MO_NCAnula  
		: MOutput
		, IMO_NCAnula_ClassInterface
	{
		public int NumTicket { get; set; }
		public string TipoTicket { get; set; }

		public override void SetFromCommand(byte[] bindata)
		{
			Error = string.Empty;
		    var data = new BinReader(bindata);
			try
			{
				ParseAnswerHeader(data);
                if(this.ErrorCodeInt == 0)
				{
					NumTicket = Extract_N(data, 8, false);
					TipoTicket = Extract_L(data, 1, false);
				}
			}
			catch(Exception ex) { Error = ex.Message; }
		}
	}


	public interface ICMD_NCAnula_ClassInterface
	{
		CmdStatus Status {  get ; }
		string Nombre { get; }
		int Opcode { get; }
		string Description { get; }

		IMI_NCAnula_ClassInterface Input { get; }
		IMO_NCAnula_ClassInterface Output { get; }
	}

    [ClassInterface(ClassInterfaceType.None)]
	public class CMD_NCAnula 
	    : CMD_Generic
		, ICMD_NCAnula_ClassInterface
	{
		public override CmdStatus Status {  get { return CmdStatus.EnCurso; }}
		public override string Nombre { get { return "NCAnula"; }}
		public override int Opcode { get { return 0x0D07; }}
		public override string Description { get { return "Anula la nota de crédito en curso."; }}

		public IMI_NCAnula_ClassInterface Input { get; protected set; }
		public IMO_NCAnula_ClassInterface Output { get; protected set; }

		public void SetDefaults()
		{
			Input = new MI_NCAnula();
			Output = new MO_NCAnula();
		}

		// Ctor
		public CMD_NCAnula()
		{
			SetDefaults();
		}
	}

}
