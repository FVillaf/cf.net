// [auto-generated]
// This file was autogenerated by a tool.
// Please, don't edit it directly. Else, your changes could be lost next time the tool is executed.
// If you need to touch this file, remove the [auto-generated] key at top. Then, the tool will skip the regeneration of this file.
//
// Copyright (c) 2017 - Andres Moretti e Hijos S.A - Argentina
// http://www.moretti.com.ar - All Rights Reserved

// CMD_DNFHGetOtrosTrib.cs - Automatic processing of commands.

using System;
using System.ComponentModel;
using System.Collections.Generic;

namespace FiscalProto.DNFH_Homologados
{
	public class MI_DNFHGetOtrosTrib : MInput
	{

		[Description("Número de tributo para el cuál se requiere información."), Category("Datos")]
		public int Index { get; set; }

		[Category("Extension")]
		[Description(
			"Indica si discriminar o totalizar la información, por cada tasa de IVA\n" +
			"false: Discriminado, true: Totalizado")]
		public bool Discriminar { get; set; }

		public override byte[] GetCommand()
		{
			Error = string.Empty;
			var list = new List<byte>();
			try
			{
				int extension = 0;
				if(Discriminar) extension |= 0x01;
				SetOpcode(0x100F, extension, list);
				Append_N(list, Index, 2, 0, true);
			}
			catch(Exception ex) { Error = ex.Message; list.Clear(); }
			return list.ToArray();
		}
	}

	public class MO_DNFHGetOtrosTrib  : MOutput
	{

		[Description("Total de otros tributos en la operación en curso."), Category("Datos"), ReadOnly(true)]
		public decimal TotalOtrosTrib { get; set; }

		[Description("Total de otros tributos (Percepciones Ingresos Brutos - Código 07) en la operación en curso."), Category("Datos"), ReadOnly(true)]
		public decimal TotalOtrosTrib_Percepciones_IIBB { get; set; }

		[Description("Total de otros tributos (Percepciones IVA - Código 06) en la operación en curso."), Category("Datos"), ReadOnly(true)]
		public decimal TotalOtrosTrib_Percepciones_IVA { get; set; }

		[Description("Total de otros tributos (Otras Percepciones - Código 09) en la operación en curso."), Category("Datos"), ReadOnly(true)]
		public decimal TotalOtrosTrib_Percepciones_Otras { get; set; }

		[Description("Cantidad de otros tributos encontrados en la operación en curso."), Category("Datos"), ReadOnly(true)]
		public int CantOtrosTrib { get; set; }

		[Description("Descripción del 'Otro Tributo'."), Category("Datos"), ReadOnly(true)]
		public string Descrip { get; set; }

		[Description("Total del 'Otro Tributo' facturado en la operación en curso."), Category("Datos"), ReadOnly(true)]
		public decimal Total { get; set; }

		[Description("Tasa del 'Otro Tributo' facturado en la operación en curso."), Category("Datos"), ReadOnly(true)]
		public int Tasa { get; set; }

		[Description("Codigo del 'Otro Tributo' facturado en la operación en curso."), Category("Datos"), ReadOnly(true)]
		public int Codigo { get; set; }

		public override void SetFromCommand(byte[] bindata)
		{
			Error = string.Empty;
		    var data = new BinReader(bindata);
			try
			{
				ParseAnswerHeader(data);
                if(this.ErrorCodeInt == 0)
				{
					TotalOtrosTrib = Extract_N(data, 10, 2, false);
					TotalOtrosTrib_Percepciones_IIBB = Extract_N(data, 10, 2, false);
					TotalOtrosTrib_Percepciones_IVA = Extract_N(data, 10, 2, false);
					TotalOtrosTrib_Percepciones_Otras = Extract_N(data, 10, 2, false);
					CantOtrosTrib = Extract_N(data, 2, false);
					Descrip = Extract_RT(data, -1, true);
					Total = Extract_N(data, 10, 2, true);
					Tasa = Extract_N(data, 4, true);
					Codigo = Extract_N(data, 2, true);
				}
			}
			catch(Exception ex) { Error = ex.Message; }
		}
	}

	public class CMD_DNFHGetOtrosTrib 
	    : CMD_CommandBase<MI_DNFHGetOtrosTrib, MO_DNFHGetOtrosTrib>
	{
		public override CmdStatus Status {  get { return CmdStatus.EnCurso; }}
		public override string Nombre { get { return "DNFHGetOtrosTrib"; }}
		public override int Opcode { get { return 0x100F; }}
		public override string Description { get { return "Obtiene información detallada sobres los otros tributos involucrados en el documento no fiscal homologado en curso."; }}

		// Ctor
		public CMD_DNFHGetOtrosTrib()
		{
			Input = new MI_DNFHGetOtrosTrib();
			Output = new MO_DNFHGetOtrosTrib();
		}
	}
}
