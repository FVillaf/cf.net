// [auto-generated]
// This file was autogenerated by a tool.
// Please, don't edit it directly. Else, your changes could be lost next time the tool is executed.
// If you need to touch this file, remove the [auto-generated] key at top. Then, the tool will skip the regeneration of this file.
//
// Copyright (c) 2017 - Andres Moretti e Hijos S.A - Argentina
// http://www.moretti.com.ar - All Rights Reserved

// CMD_DNFH1CambiaPreferencias.cs - Automatic processing of commands.

using System;
using System.ComponentModel;
using System.Collections.Generic;

namespace FiscalProto.DNFH_Genericos
{
	public class MI_DNFH1CambiaPreferencias : MInput
	{

		[Category("Extension")]
		[Description(
			"Indica si imprime o no la Razón Social en el encabezamiento de un DNFH\n" +
			"false: Si, true: No")]
		public bool RazonSocial { get; set; }

		[Category("Extension")]
		[Description(
			"Indica si imprime o no el punto de venta en el encabezamiento de un DNFH\n" +
			"false: Si, true: No")]
		public bool PtoVenta { get; set; }

		[Category("Extension")]
		[Description(
			"Indica si imprime o no la línea con el nombre de fantasía en el encabezamiento de un DNFH\n" +
			"false: No, true: Si")]
		public bool Fantasia { get; set; }

		[Category("Extension")]
		[Description(
			"Indica si imprime o no la línea de Ingresos Brutos en el encabezamiento de un DNFH\n" +
			"false: No, true: Si")]
		public bool IIBB { get; set; }

		[Category("Extension")]
		[Description(
			"Indica si imprime o no la línea de Inicio de Actividades en el encabezamiento de un DNFH\n" +
			"false: No, true: Si")]
		public bool IniAct { get; set; }

		[Category("Extension")]
		[Description(
			"Indica si imprime o no las líneas de logo en el encabezamiento de un DNFH\n" +
			"false: No, true: Si")]
		public bool Logo { get; set; }

		[Category("Extension")]
		[Description(
			"Indica si imprime o no las líneas del domicio comercial en el encabezamiento de un DNFH\n" +
			"false: No, true: Si")]
		public bool DomComercial { get; set; }

		[Category("Extension")]
		[Description(
			"Indica si imprime o no los datos fiscales en el encabezamiento de un DNFH\n" +
			"false: No, true: Si")]
		public bool DataFiscal { get; set; }

		public override byte[] GetCommand()
		{
			Error = string.Empty;
			var list = new List<byte>();
			try
			{
				int extension = 0;
				if(RazonSocial) extension |= 0x04;
				if(PtoVenta) extension |= 0x08;
				if(Fantasia) extension |= 0x80;
				if(IIBB) extension |= 0x100;
				if(IniAct) extension |= 0x200;
				if(Logo) extension |= 0x400;
				if(DomComercial) extension |= 0x800;
				if(DataFiscal) extension |= 0x1000;
				SetOpcode(0x0E08, extension, list);
			}
			catch(Exception ex) { Error = ex.Message; list.Clear(); }
			return list.ToArray();
		}
	}

	public class MO_DNFH1CambiaPreferencias  : MOutput
	{

		public override void SetFromCommand(byte[] bindata)
		{
			Error = string.Empty;
		    var data = new BinReader(bindata);
			try
			{
				ParseAnswerHeader(data);
                if(this.ErrorCodeInt == 0)
				{
				}
			}
			catch(Exception ex) { Error = ex.Message; }
		}
	}

	public class CMD_DNFH1CambiaPreferencias 
	    : CMD_CommandBase<MI_DNFH1CambiaPreferencias, MO_DNFH1CambiaPreferencias>
	{
		public override CmdStatus Status {  get { return CmdStatus.EnCurso; }}
		public override string Nombre { get { return "DNFH1CambiaPreferencias"; }}
		public override int Opcode { get { return 0x0E08; }}
		public override string Description { get { return "Configura las preferencias default para los documentos no fiscales homologados."; }}

		// Ctor
		public CMD_DNFH1CambiaPreferencias()
		{
			Input = new MI_DNFH1CambiaPreferencias();
			Output = new MO_DNFH1CambiaPreferencias();
		}
	}
}
