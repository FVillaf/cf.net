// [auto-generated]
// This file was autogenerated by a tool.
// Please, don't edit it directly. Else, your changes could be lost next time the tool is executed.
// If you need to touch this file, remove the [auto-generated] key at top. Then, the tool will skip the regeneration of this file.
//
// Copyright (c) 2017 - Andres Moretti e Hijos S.A - Argentina
// http://www.moretti.com.ar - All Rights Reserved

// CMD_DNFH1Lineas.cs - Automatic processing of commands.

using System;
using System.ComponentModel;
using System.Collections.Generic;

namespace FiscalProto.DNFH_Genericos
{
	public class MI_DNFH1Lineas : MInput
	{

		[Description("Texto opcional para la línea 1."), Category("Datos")]
		public string Linea1 { get; set; }

		[Description("Texto opcional para la línea 2."), Category("Datos")]
		public string Linea2 { get; set; }

		[Description("Texto opcional para la línea 3."), Category("Datos")]
		public string Linea3 { get; set; }

		[Description("Texto opcional para la línea 4."), Category("Datos")]
		public string Linea4 { get; set; }

		[Description("Texto opcional para la línea 5."), Category("Datos")]
		public string Linea5 { get; set; }

		[Description("Texto opcional para la línea 6."), Category("Datos")]
		public string Linea6 { get; set; }

		[Description("Texto opcional para la línea 7."), Category("Datos")]
		public string Linea7 { get; set; }

		[Description("Texto opcional para la línea 8."), Category("Datos")]
		public string Linea8 { get; set; }

		[Description("Texto opcional para la línea 9."), Category("Datos")]
		public string Linea9 { get; set; }

		[Description("Texto opcional para la línea 10."), Category("Datos")]
		public string Linea10 { get; set; }

		[Description("Texto opcional para la línea 11."), Category("Datos")]
		public string Linea11 { get; set; }

		[Description("Texto opcional para la línea 12."), Category("Datos")]
		public string Linea12 { get; set; }

		[Description("Texto opcional para la línea 13."), Category("Datos")]
		public string Linea13 { get; set; }

		[Description("Texto opcional para la línea 14."), Category("Datos")]
		public string Linea14 { get; set; }

		[Description("Texto opcional para la línea 15."), Category("Datos")]
		public string Linea15 { get; set; }

		[Description("Texto opcional para la línea 16."), Category("Datos")]
		public string Linea16 { get; set; }

		[Description("Texto opcional para la línea 17."), Category("Datos")]
		public string Linea17 { get; set; }

		[Description("Texto opcional para la línea 18."), Category("Datos")]
		public string Linea18 { get; set; }

		[Description("Texto opcional para la línea 19."), Category("Datos")]
		public string Linea19 { get; set; }

		[Description("Texto opcional para la línea 20."), Category("Datos")]
		public string Linea20 { get; set; }

		[Description("Texto opcional para la línea 21."), Category("Datos")]
		public string Linea21 { get; set; }

		[Description("Texto opcional para la línea 22."), Category("Datos")]
		public string Linea22 { get; set; }

		[Description("Texto opcional para la línea 23."), Category("Datos")]
		public string Linea23 { get; set; }

		[Description("Texto opcional para la línea 24."), Category("Datos")]
		public string Linea24 { get; set; }

		[Description("Texto opcional para la línea 25."), Category("Datos")]
		public string Linea25 { get; set; }

		[Description("Texto opcional para la línea 26."), Category("Datos")]
		public string Linea26 { get; set; }

		[Description("Texto opcional para la línea 27."), Category("Datos")]
		public string Linea27 { get; set; }

		[Description("Texto opcional para la línea 28."), Category("Datos")]
		public string Linea28 { get; set; }

		[Description("Texto opcional para la línea 29."), Category("Datos")]
		public string Linea29 { get; set; }

		[Description("Texto opcional para la línea 30."), Category("Datos")]
		public string Linea30 { get; set; }

		public override byte[] GetCommand()
		{
			Error = string.Empty;
			var list = new List<byte>();
			try
			{
				int extension = 0;
				SetOpcode(0x0E03, extension, list);
				Append_RT(list, Linea1, -1, 0, true);
				Append_RT(list, Linea2, -1, 0, true);
				Append_RT(list, Linea3, -1, 0, true);
				Append_RT(list, Linea4, -1, 0, true);
				Append_RT(list, Linea5, -1, 0, true);
				Append_RT(list, Linea6, -1, 0, true);
				Append_RT(list, Linea7, -1, 0, true);
				Append_RT(list, Linea8, -1, 0, true);
				Append_RT(list, Linea9, -1, 0, true);
				Append_RT(list, Linea10, -1, 0, true);
				Append_RT(list, Linea11, -1, 0, true);
				Append_RT(list, Linea12, -1, 0, true);
				Append_RT(list, Linea13, -1, 0, true);
				Append_RT(list, Linea14, -1, 0, true);
				Append_RT(list, Linea15, -1, 0, true);
				Append_RT(list, Linea16, -1, 0, true);
				Append_RT(list, Linea17, -1, 0, true);
				Append_RT(list, Linea18, -1, 0, true);
				Append_RT(list, Linea19, -1, 0, true);
				Append_RT(list, Linea20, -1, 0, true);
				Append_RT(list, Linea21, -1, 0, true);
				Append_RT(list, Linea22, -1, 0, true);
				Append_RT(list, Linea23, -1, 0, true);
				Append_RT(list, Linea24, -1, 0, true);
				Append_RT(list, Linea25, -1, 0, true);
				Append_RT(list, Linea26, -1, 0, true);
				Append_RT(list, Linea27, -1, 0, true);
				Append_RT(list, Linea28, -1, 0, true);
				Append_RT(list, Linea29, -1, 0, true);
				Append_RT(list, Linea30, -1, 0, true);
			}
			catch(Exception ex) { Error = ex.Message; list.Clear(); }
			return list.ToArray();
		}
	}

	public class MO_DNFH1Lineas  : MOutput
	{

		public override void SetFromCommand(byte[] bindata)
		{
			Error = string.Empty;
		    var data = new BinReader(bindata);
			try
			{
				ParseAnswerHeader(data);
                if(this.ErrorCodeInt == 0)
				{
				}
			}
			catch(Exception ex) { Error = ex.Message; }
		}
	}

	public class CMD_DNFH1Lineas 
	    : CMD_CommandBase<MI_DNFH1Lineas, MO_DNFH1Lineas>
	{
		public override CmdStatus Status {  get { return CmdStatus.EnCurso; }}
		public override string Nombre { get { return "DNFH1Lineas"; }}
		public override int Opcode { get { return 0x0E03; }}
		public override string Description { get { return "Imprime varias líneas de texto en el documento no fiscal abierto."; }}

		// Ctor
		public CMD_DNFH1Lineas()
		{
			Input = new MI_DNFH1Lineas();
			Output = new MO_DNFH1Lineas();
		}
	}
}
